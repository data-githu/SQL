14. sort 명령어
data 를 특정 컬럼을 기준으로 정렬하는 명령어

예제 : 
# sort 옵션 파일명
# sort -k 6 emp.txt

※ 설명 : -n 옵션을 사용하면 숫자로 변환해서 정렬을 해줍니다.
		-k 를 사용하고 6을 쓰면 6번째 컬럼을 기준으로 정렬하겠다는 뜻입니다.
		아래과 같이 -r 옵션을 사용하면 월급이 높은 사원부터 출력됩니다.
		
# sort -nrk 6 emp.txt

문제52. 이름과 월급을 출력하는데 월급이 높은 사원부터 출력하시오!
# sort -nrk 6 emp.txt |  awk '{print $2, $6}' 

문제53. 직업이 SALESMAN 인 사원들의 이름과 월급과 직업을 출력하는데 월급이 높은 사원부터 출력하시오!
# awk  '$3 == toupper("salesman") {print $2, $6, $3}' emp.txt | sort -nrk 2

설명 : 이번에는 awk 를 먼저해서 emp.txt 에서 직업이 SALESMAN 인 사원들의 이름과 월급과 직업을 출력하고 이 출력을 파이프 다음에 입력으로 보내서 정렬을 하는데 입력으로 보내서 정렬을 하는데 입력으로 보낸 3개의 컬럼중에 두번째 컬럼을 기준으로 정렬을 했다.

문제54. 직업이 SALESMAN 이 아닌 사원들의 이름과 월급과 직업을 출력하는데 월급이 낮은 사원부터 높은 사원순으로 출력하시오!
# awk  '$3 != toupper("salesman") {print $2, $6, $3}' emp.txt | sort -nk 2

문제55. 사원 테이블의 월급의 토탈값을 출력하시오!
# awk '{print $6}' emp.txt | awk '{sum += $1 } END {print sum}'

설명 : 월급만 추출해서 그 출력값을 파이프 다음에 입력값으로 보냅니다. 
	sum = sum + $1 이 실행되면서 월급이 계속 누적됩니다.
	END 로 종료되면 sum을 프린트 합니다.
	
문제56. 직업이 salesman 인 사원들의 토탈월급을 출력하시오!
#   grep -i 'salesman' emp.txt | awk '{print $6}' | awk '{sum += $1 } END {print sum}'

설명 : emp.txt 에서 salesman 이 포함된 행만 추출해서 파이프 다음에 입력으로 보냅니다. 그리고 그 중 6번째 열만 추출해서 파이프 다음에 입력으로 보냅니다. 그리고 그 컬럼 하나의 값을 누적해서 출력한다.

문제57. 직업이 salesman이 아니고 월급이 2000 이상인 사원들의 이름과 월급과 직업을 출력하시오!
# awk  '$3 != toupper("salesman") && $6 >= 2000 {print $2, $6, $3}' emp.txt

문제58. 위의 사원들의 월급의 토탈값을 출력하시오!
# awk  '$3 != toupper("salesman") && $6 >= 2000 {print $2, $6, $3}' emp.txt | awk '{sum += $2 } END {print sum}'

문제59. 81년도에 입사한 사원들의 월급의 토탈값을 출력하시오!
# awk 'substr($5, 3, 2) == "81" {print $2, $5, $6}' emp.txt  | awk '{sum += $3 } END {print sum}'

문제60. 아래의 SQL 결과를 리눅스 명령어로 출력하시오!
SQL > 
select ename || '의 월급은' || sal || '입니다.'
	from emp;
	
LINUX>
# awk '{print $2 "의 월급은 " $6 " 입니다."}' emp.txt

문제61. 아래의 SQL 결과를 리눅스 명령어로 출력하시오!
SQL>
select ename || '의 직업은' || job || '입니다.'
	from emp
	
LINUX>
# awk '{print $2 "의 직업은 " $3 " 입니다."}' emp.txt

문제62. 집에서 (/root/)에서 ls -l 로 수행한 결과를 출력하시오!
# cd
# ls -l

문제63. 위에서 출력된 결과에서 파일의 크기에 해당하는 부분만 출력하시오!
# cd
# ls -l | awk '{print $5}'

문제64. 위에서 출력된 숫자들의 총합을 출력하시오!
# cd 
# ls -l | awk '{print $5}' | awk '{sum += $1 } END {print sum}'

결과 : 16776
설명 :
바이트
킬로바이트 : 1000^1
메가바이트 : 1000^2
기가바이트 : 1000^3
테라바이트 : 1000^4
페타바이트 : 1000^5
엑사바이트 : 1000^6
제타바이트 : 1000^7
요타바이트 : 1000^8